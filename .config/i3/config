# Sam's i3 config file
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!


### Variables ###
set $mod                        Mod4
set $alt                        Mod1 

set $brightness_dft             3%
set $brightness_min             1
set $brightness_max             100%
set $brightness_step            1%
set $brightness_micro_step      10

set $browser                    firefox
set $browser_class              firefox
set $browser_ws                 $ws2
set $compositor                 picom -i0.85 -D3
set $menu                       rofi -show drun
set $fm                         pcmanfm
set $fm_class                   Pcmanfm
set $fm_ws                      $ws4
set $term                       terminator
set $term_class                 Terminator
set $term_ws                    $ws1

set $pa_sink_default 63
set $pa_source_default 65

# Paths
set $xkbmap                     $HOME/.xkb/vimkeys_LWIN_and_TLDE_to_Super.xkb
set $scrot_dir                  $HOME/Pictures/screenshots/
set $wallpaper                  $HOME/Pictures/wallpapers/...

# Colors
set $red #b00000 
set $purple #692b69
# set $purple #aa88dd
set $pink #dd6699
set $violet #dd5599
#set $window_active_color $red $red $red $red

# Aliases
set $run exec --no-startup-id
set $bg_renderer feh --bg-fill


### Autostart ###

# Set XKB map
# exec_always --no-startup-id xkbcomp $xkbmap $DISPLAY

# Set brightness
exec --no-startup-id brightnessctl s 5%

# Start Bluetooth manager
exec_always --no-startup-id blueman-applet

# Trackpad configurations: /etc/X11/xorg.conf.d/40-libinput.conf

# [currently in $HOME/.xinitrc] start udiskie to automount block devices
#exec_always udiskie -mt

# Display wallpaper
exec_always --no-startup-id $bg_renderer $wallpaper 

# Window compositor
exec_always --no-startup-id $compositor

# Disable screen blanking
exec_always --no-startup-id exec xset -dpms
exec_always --no-startup-id exec xset s off

# Hide cursor when not in use
exec_always --no-startup-id unclutter --ignore-scrolling


### Define keyboard shortcuts ###

## Launching apps:

# Terminal, leaving window unfocused:
bindsym $mod+Return $run $term
bindsym $alt+Ctrl+t $run $term
# and focusing the window:
bindsym $mod+Shift+Return $run $term; workspace $term_ws

# Web browser, leaving window unfocused:
bindsym $mod+w $run $browser
# and focusing the window:
bindsym $mod+Shift+w $run $browser; workspace $browser_ws

# File explorer, leaving window unfocused:
bindsym $mod+e $run $fm
# and focusing the window:
bindsym $mod+shift+e $run $fm; workspace $fm_ws

# Use pactl to adjust volume:
bindsym XF86AudioRaiseVolume $run pactl set-sink-volume $pa_sink_default +1%
bindsym XF86AudioLowerVolume $run pactl set-sink-volume $pa_sink_default -1%
bindsym XF86AudioMute $run pactl set-sink-mute $pa_sink_default toggle
bindsym XF86AudioMicMute $run pactl set-source-mute $pa_source_default toggle

### Use amixer to adjust volume:
##bindsym XF86AudioRaiseVolume $run amixer set Master 1%+
##bindsym XF86AudioLowerVolume $run amixer set Master 1%-
##bindsym XF86AudioMute $run amixer set Master toggle
##bindsym XF86AudioMicMute $run amixer set Dmic0 toggle

# Control backlight brightness:
# (I also use ACPI event listeners for brightness, but
# they do not respond to held buttons on some machines.)
bindsym XF86MonBrightnessDown $run brightnessctl s $brightness_step-
bindsym XF86MonBrightnessUp $run brightnessctl s $brightness_step+
bindsym Ctrl+XF86MonBrightnessDown $run brightnessctl s $brightness_micro_step-
bindsym Ctrl+XF86MonBrightnessUp $run brightnessctl s $brightness_micro_step+
# Set to minimum/maximum brightness:
bindsym $mod+Ctrl+XF86MonBrightnessDown $run brightnessctl s $brightness_min
bindsym $mod+Ctrl+XF86MonBrightnessUp $run brightnessctl s $brightness_max

### Control music with MOC:
###   softmixer volume
##bindsym $alt+XF86AudioRaiseVolume $run mocp -v +1
##bindsym $alt+XF86AudioLowerVolume $run mocp -v -1
###   pause/unpause
##bindsym XF86Search $run mocp -G
###   previous song
##bindsym XF86LaunchA $run mocp -r
###   next song
##bindsym XF86Explorer $run mocp -f


## Manipulate containers:

# Kill focused window
bindsym $mod+Shift+q kill
bindsym $alt+F4 kill

# Show an application menu
bindsym $mod+space $run $menu
bindsym $alt+F3 $run $menu

# Change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
# Same bindings, but for the arrow keys
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move focused window
bindsym $mod+Shift+h move left 1 px
bindsym $mod+Shift+j move down 1 px
bindsym $mod+Shift+k move up 1 px
bindsym $mod+Shift+l move right 1 px
# Same bindings, but for the arrow keys
bindsym $mod+Shift+Left move left 1 px
bindsym $mod+Shift+Down move down 1 px
bindsym $mod+Shift+Up move up 1 px
bindsym $mod+Shift+Right move right 1 px

# Toggle split orientation
#bindsym $mod+t split toggle

# Split in horizontal orientation
bindsym $mod+semicolon split h

# Split in vertical orientation
bindsym $mod+apostrophe split v

# Enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# Change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+Tab layout toggle split

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# Change focus between tiling / floating windows
#bindsym $mod+Tab focus mode_toggle

# Focus the parent container
#bindsym $mod+a focus parent

# Focus the child container
#bindsym $mod+d focus child

# Focus previous container
focus_wrapping yes
bindsym $alt+semicolon focus left
bindsym $alt+Tab focus left
bindsym $alt+Shift+Tab focus right


### Window and workspace properties ###

default_border pixel 1

# Border colors
#client.focused              #353439 #9FEE00 #7B9F35
#client.unfocused            #353439 #9FEE00 #7B9F35
#client.focused_inactive     #353439 #9FEE00 #7B9F35
# client.focused          $red $red $red $red
# client.focused          $pink $pink $pink $pink 
#client.focused          #3F8AC2 #096BAA #00BAA7 #00DA8E
client.focused          $violet $violet $violet $violet 
client.focused_inactive #333333 #5F676A #ffffff #484e50
client.unfocused        #333333 #424242 #888888 #292d2e 
client.urgent           #C10004 #900000 #ffffff #900000

# Workspace auto-switch
workspace_auto_back_and_forth yes

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Source Code Pro Bold 10

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.
# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
#run xss-lock --transfer-sleep-lock -- i3lock --nofork

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
#   
set $ws1 "1:1[]"
set $ws2 "2:2[]"
set $ws3 "3:[3]"
set $ws4 "4:[4]"
set $ws5 "5:[5]"
set $ws6 "6:[6]"
set $ws7 "7:[7]"
set $ws8 "8:[8]"
set $ws9 "9:[9]"
set $ws10 "10:[10]"
#set $ws3 "3[]"
#set $ws4 "4[]"
#set $ws4 "4[ ]"
#set $ws5 "5[]"
#set $ws6 "6[]"
#set $ws7 "7[]"
#set $ws8 "8[]"
#set $ws9 "9[]"
#set $ws10 "10[]"

# Switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod+$alt+Left workspace prev
bindsym $mod+$alt+Right workspace next

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
bindsym $mod+Shift+$alt+Left move container to workspace prev
bindsym $mod+Shift+$alt+Right move container to workspace next

# Assign programs to workspaces
#for_window [class="$term_class"] move to workspace $ws1
#for_window [class="$browser_class"] move to workspace $ws2
#for_window [class="$fm_class"] move to workspace $ws3
#for_window [class="$ide_class"] move to workspace $ws3
#for_window [class=$term] move to workspace $ws2
#for_window [class=$term] move to workspace $ws2


### Window manager functions ###

# Reload the configuration file
bindsym $mod+Shift+c reload

# Restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e $run "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# Exit i3 without confirmation
bindsym $mod+$alt+Control+Escape exit

# Resize windows
bindsym $mod+y resize shrink width 1 px or 1 ppt
bindsym $mod+i resize grow height 1 px or 1 ppt
bindsym $mod+u resize shrink height 1 px or 1 ppt
bindsym $mod+o resize grow width 1 px or 1 ppt


### Context Menus ###

# Resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing H will shrink the window’s width.
    # Pressing K will grow the window’s width.
    # Pressing J will shrink the window’s height.
    # Pressing L will grow the window’s height.
    bindsym h resize shrink width 1 px or 1 ppt
    bindsym k resize grow height 1 px or 1 ppt
    bindsym j resize shrink height 1 px or 1 ppt
    bindsym l resize grow width 1 px or 1 ppt

    # Same bindings, but for the arrow keys
    bindsym Left resize shrink width 1 px or 1 ppt
    bindsym Down resize shrink height 1 px or 1 ppt
    bindsym Up resize grow height 1 px or 1 ppt
    bindsym Right resize grow width 1 px or 1 ppt

    # Exit the mode:
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"


# Power menu
set $powermenu " [S]uspend|[H]ibernate|[R]eboot|[P]oweroff"
mode $powermenu {
    bindsym p $run systemctl poweroff
    bindsym r $run systemctl reboot
    bindsym h $run systemctl hibernate; mode "default"
    bindsym s $run systemctl suspend; mode "default"
    #bindsym l $run 13lock -c 000a0f

    # Exit the mode:
    bindsym Escape mode "default"
    bindsym Return mode "default"
}
bindsym $mod+shift+Escape mode $powermenu
# bindsym $mod+shift+Escape exec --no-startup-id qdbus-qt5 org.kde.ksmserver /KSMServer org.kde.KSMServerInterface.logout -1 -1 -1


# Use maim or scrot to take screenshots from an interactive mode.
set $get_window_id xprop -root | grep -m 1 _NET_ACTIVE_WINDOW | sed -rn 's/.* (.*)$/\1/p'
set $get_datetime date +'%Y-%m-%d_%H-%M-%S'

set $screenshotmenu ""
mode $screenshotmenu {
    # With maim (works better)...
    # Fullscreen shot:
    bindsym Return $run maim -um 10 $scrot_dir/$($get_datetime).png; mode "default"

    # Current focused container:
    bindsym space $run maim -um 10 -i $(( $($get_window_id) )) $scrot_dir/$($get_datetime).png; mode "default"

    # Interactive selection:
    bindsym --release l $run maim -sum 10 $scrot_dir/$($get_datetime).png; mode "default"

    # With scrot...
    # Fullscreen shot:
    #bindsym Return $run scrot -zq90 '%Y-%m-%d_%H-%M-%S.png' -e 'mv $f $scrot_dir'; mode "default"

    # Capture focused container:
    #bindsym space $run scrot -zuq90 '%Y-%m-%d_%H-%M-%S.png' -e 'mv $f $scrot_dir'; mode "default"

    # Interactive selection:
    #bindsym --release l exec scrot -zs -q100  '%Y-%m-%d_%H-%M-%S.png' -e 'mv $f $scrot_dir'; mode "default"

    # Exit the mode:
    bindsym Escape mode "default"
}
bindsym $mod+shift+s mode $screenshotmenu


### Bar ###
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
##bar {
##    strip_workspace_numbers yes
##    font pango:Source Code Pro Bold 10
##
##    status_command python3.12 -m mybar
##
##    colors {
##        statusline $violet
##        focused_workspace   #000000 $purple #dddddd
##        active_workspace   #000000 $violet #bbbbbb
##        inactive_workspace #000000 #000000 #bbbbbb
##        urgent_workspace   #a00000 #000000 #f00000
##    }
##}
##


### Gaps ###
gaps inner 8px
gaps bottom 0px
smart_gaps on


### Tweaks for KDE Plasma ###
for_window [title="Desktop — Plasma"] kill, floating enable, border none
for_window [class="plasmashell"] floating enable
for_window [class="Plasma"] floating enable, border none
for_window [title="plasma-desktop"] floating enable, border none
for_window [title="win7"] floating enable, border none
for_window [class="krunner"] floating enable, border none
for_window [class="Kmix"] floating enable, border none
for_window [class="Klipper"] floating enable, border none
for_window [class="Plasmoidviewer"] floating enable, border none
for_window [class="(?i)*nextcloud*"] floating disable
for_window [class="plasmashell" window_type="notification"] floating enable, border none, move right 700px, move down 450px
no_focus [class="plasmashell" window_type="notification"]
#for_window [class="plasmashell" window_type="notification"] floating enable, border none, move position 1450px 20px

# Kill KDE desktop windows opened from version 5.27.2
for_window [title="Desktop @ QRect"] kill; floating enable; border none

